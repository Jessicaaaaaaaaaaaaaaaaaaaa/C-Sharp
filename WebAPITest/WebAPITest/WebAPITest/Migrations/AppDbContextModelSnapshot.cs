// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAPITest.Entities;

namespace WebAPITest.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebAPITest.Entities.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Credits")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CourseId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            CourseId = 1,
                            Credits = 3,
                            Name = "Accounting"
                        },
                        new
                        {
                            CourseId = 2,
                            Credits = 3,
                            Name = "Finance"
                        });
                });

            modelBuilder.Entity("WebAPITest.Entities.Instructor", b =>
                {
                    b.Property<int>("InstructoreID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InstructoreID");

                    b.ToTable("Instructors");

                    b.HasData(
                        new
                        {
                            InstructoreID = 1,
                            Name = "Daisy Duck"
                        },
                        new
                        {
                            InstructoreID = 2,
                            Name = "Tom"
                        });
                });

            modelBuilder.Entity("WebAPITest.Entities.Registration", b =>
                {
                    b.Property<int>("RegistrationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int?>("InstructorId")
                        .HasColumnType("int");

                    b.Property<int>("IntructorId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RegistrationId");

                    b.HasIndex("CourseId");

                    b.HasIndex("InstructorId");

                    b.HasIndex("StudentId");

                    b.ToTable("Registration");

                    b.HasData(
                        new
                        {
                            RegistrationId = 1,
                            CourseId = 1,
                            IntructorId = 1,
                            StudentId = 1,
                            Type = "Fulltime"
                        },
                        new
                        {
                            RegistrationId = 2,
                            CourseId = 1,
                            IntructorId = 1,
                            StudentId = 2,
                            Type = "Parttime"
                        },
                        new
                        {
                            RegistrationId = 3,
                            CourseId = 2,
                            IntructorId = 2,
                            StudentId = 2,
                            Type = "Fulltime"
                        });
                });

            modelBuilder.Entity("WebAPITest.Entities.Student", b =>
                {
                    b.Property<int>("StudentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("StudentID");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            StudentID = 1,
                            Name = "John Smith"
                        },
                        new
                        {
                            StudentID = 2,
                            Name = "Liza Ray"
                        });
                });

            modelBuilder.Entity("WebAPITest.Entities.Registration", b =>
                {
                    b.HasOne("WebAPITest.Entities.Course", "course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebAPITest.Entities.Instructor", "instructor")
                        .WithMany()
                        .HasForeignKey("InstructorId");

                    b.HasOne("WebAPITest.Entities.Student", "student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("course");

                    b.Navigation("instructor");

                    b.Navigation("student");
                });
#pragma warning restore 612, 618
        }
    }
}
